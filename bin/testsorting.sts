PROJECTIONS_ID 
VERSION 7.0
TOTAL_PHASES 1
MACHINE mpi-linux-x86_64
PROCESSORS 4
TOTAL_CHARES 50
TOTAL_EPS 186
TOTAL_MSGS 27
TOTAL_PSEUDOS 0
TOTAL_EVENTS 0
CHARE 0 dummy_thread_chare
CHARE 1 dummy_pack_chare
CHARE 2 dummy_unpack_chare
CHARE 3 SDAG
CHARE 4 null
CHARE 5 Chare
CHARE 6 Group
CHARE 7 FutureBOC
CHARE 8 FutureMain
CHARE 9 CkGroupInitCallback
CHARE 10 CkGroupReadyCallback
CHARE 11 CkReductionMgr
CHARE 12 CkNodeReductionMgr
CHARE 13 CkLocMgr
CHARE 14 CkArrayMap
CHARE 15 RRMap
CHARE 16 DefaultArrayMap
CHARE 17 FastArrayMap
CHARE 18 HilbertArrayMap
CHARE 19 ReadFileMap
CHARE 20 BlockMap
CHARE 21 CldMap
CHARE 22 ConfigurableRRMap
CHARE 23 PropMap
CHARE 24 CkMapsInit
CHARE 25 CkArrayReductionMgr
CHARE 26 CkArray
CHARE 27 ArrayElement
CHARE 28 BaseLB
CHARE 29 NullLB
CHARE 30 LBDBInit
CHARE 31 LBDatabase
CHARE 32 MetaLBInit
CHARE 33 MetaBalancer
CHARE 34 MetaBalancerRedn
CHARE 35 ckcallback_main
CHARE 36 ckcallback_group
CHARE 37 TempoChare
CHARE 38 TempoGroup
CHARE 39 TempoArray
CHARE 40 waitqd_QDChare
CHARE 41 CkCheckpointMgr
CHARE 42 CkCheckpointInit
CHARE 43 mpi_main
CHARE 44 TraceProjectionsInit
CHARE 45 KMeansBOC
CHARE 46 TraceProjectionsBOC
CHARE 47 Main<key, value >
CHARE 48 Sorter<key,value >
CHARE 49 Bucket<key,value >
ENTRY CHARE 0 dummy_thread_ep 0 0
ENTRY CHARE 1 dummy_pack_ep 1 1
ENTRY CHARE 2 dummy_unpack_ep 2 2
ENTRY CHARE 3 SDAG_RTS 3 3
ENTRY CHARE 4 null 0 0
ENTRY CHARE 5 FutureBOC(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 6 SetFuture(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 7 SetSema(FutureInitMsg* impl_msg) 7 6
ENTRY CHARE 8 FutureBOC(CkMigrateMessage* impl_msg) 7 0
ENTRY CHARE 9 FutureMain(CkArgMsg* impl_msg) 8 0
ENTRY CHARE 10 CkGroupInitCallback(void) 9 0
ENTRY CHARE 11 callMeBack(CkGroupCallbackMsg* impl_msg) 9 7
ENTRY CHARE 12 CkGroupInitCallback(CkMigrateMessage* impl_msg) 9 0
ENTRY CHARE 13 CkGroupReadyCallback(void) 10 0
ENTRY CHARE 14 callMeBack(CkGroupCallbackMsg* impl_msg) 10 7
ENTRY CHARE 15 CkGroupReadyCallback(CkMigrateMessage* impl_msg) 10 0
ENTRY CHARE 16 CkReductionMgr(const CProxy_CkArrayReductionMgr &impl_noname_0) 11 0
ENTRY CHARE 17 RecvMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 18 ReductionStarting(CkReductionNumberMsg* impl_msg) 11 9
ENTRY CHARE 19 LateMigrantMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 20 MigrantDied(CkReductionNumberMsg* impl_msg) 11 9
ENTRY CHARE 21 Barrier_RecvMsg(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 22 ArrayReductionHandler(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 23 contributeViaMessage(CkReductionMsg* impl_msg) 11 8
ENTRY CHARE 24 AddToInactiveList(CkReductionInactiveMsg* impl_msg) 11 10
ENTRY CHARE 25 CkReductionMgr(CkMigrateMessage* impl_msg) 11 0
ENTRY CHARE 26 CkNodeReductionMgr(void) 12 0
ENTRY CHARE 27 ReductionStarting(CkReductionNumberMsg* impl_msg) 12 9
ENTRY CHARE 28 RecvMsg(CkReductionMsg* impl_msg) 12 8
ENTRY CHARE 29 restartLocalGroupReductions(int number) 12 0
ENTRY CHARE 30 DeleteChild(int child) 12 0
ENTRY CHARE 31 DeleteNewChild(int child) 12 0
ENTRY CHARE 32 modifyTree(int code, int size, const int *data) 12 0
ENTRY CHARE 33 collectMaxRedNo(int redNo) 12 0
ENTRY CHARE 34 unblockNode(int maxRedNo) 12 0
ENTRY CHARE 35 CkLocMgr(const CkArrayOptions &opts) 13 11
ENTRY CHARE 36 deliverInline(CkMessage* impl_msg) 13 -1
ENTRY CHARE 37 immigrate(CkArrayElementMigrateMessage* impl_msg) 13 12
ENTRY CHARE 38 requestLocation(const CkArrayIndex &idx, int peToTell, const bool &suppressIfHere) 13 11
ENTRY CHARE 39 updateLocation(const CkArrayIndex &idx, int nowOnPe) 13 11
ENTRY CHARE 40 reclaimRemote(const CkArrayIndex &idx, int deletedOnPe) 13 11
ENTRY CHARE 41 dummyAtSync(void) 13 0
ENTRY CHARE 42 CkLocMgr(CkMigrateMessage* impl_msg) 13 0
ENTRY CHARE 43 RRMap(void) 15 0
ENTRY CHARE 44 RRMap(CkMigrateMessage* impl_msg) 15 0
ENTRY CHARE 45 DefaultArrayMap(void) 16 0
ENTRY CHARE 46 DefaultArrayMap(CkMigrateMessage* impl_msg) 16 0
ENTRY CHARE 47 FastArrayMap(void) 17 0
ENTRY CHARE 48 FastArrayMap(CkMigrateMessage* impl_msg) 17 0
ENTRY CHARE 49 HilbertArrayMap(void) 18 0
ENTRY CHARE 50 HilbertArrayMap(CkMigrateMessage* impl_msg) 18 0
ENTRY CHARE 51 ReadFileMap(void) 19 0
ENTRY CHARE 52 ReadFileMap(CkMigrateMessage* impl_msg) 19 0
ENTRY CHARE 53 BlockMap(void) 20 0
ENTRY CHARE 54 BlockMap(CkMigrateMessage* impl_msg) 20 0
ENTRY CHARE 55 CldMap(void) 21 0
ENTRY CHARE 56 CldMap(CkMigrateMessage* impl_msg) 21 0
ENTRY CHARE 57 ConfigurableRRMap(void) 22 0
ENTRY CHARE 58 ConfigurableRRMap(CkMigrateMessage* impl_msg) 22 0
ENTRY CHARE 59 PropMap(void) 23 0
ENTRY CHARE 60 PropMap(CkMigrateMessage* impl_msg) 23 0
ENTRY CHARE 61 CkMapsInit(CkArgMsg* impl_msg) 24 0
ENTRY CHARE 62 CkArrayReductionMgr(void) 25 0
ENTRY CHARE 63 CkArrayReductionMgr(int dummy, const CkGroupID &gid) 25 11
ENTRY CHARE 64 setAttachedGroup(const CkGroupID &groupID) 25 11
ENTRY CHARE 65 CkArrayReductionMgr(CkMigrateMessage* impl_msg) 25 0
ENTRY CHARE 66 CkArray(const CkArrayOptions &opts, const CkMarshalledMessage &ctorMsg, const CkNodeGroupID &nodereductionProxy) 26 11
ENTRY CHARE 67 insertElement(CkMessage* impl_msg) 26 -1
ENTRY CHARE 68 remoteBeginInserting(void) 26 0
ENTRY CHARE 69 remoteDoneInserting(void) 26 0
ENTRY CHARE 70 sendBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 71 recvBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 72 recvBroadcastViaTree(CkMessage* impl_msg) 26 -1
ENTRY CHARE 73 sendExpeditedBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 74 recvExpeditedBroadcast(CkMessage* impl_msg) 26 -1
ENTRY CHARE 75 ckDestroy(void) 26 0
ENTRY CHARE 76 CkArray(CkMigrateMessage* impl_msg) 26 0
ENTRY CHARE 77 ArrayElement(void) 27 0
ENTRY CHARE 78 ckDestroy(void) 27 0
ENTRY CHARE 79 recvBroadcast(CkMessage* impl_msg) 27 -1
ENTRY CHARE 80 inmem_checkpoint(CkArrayCheckPTReqMessage* impl_msg) 27 0
ENTRY CHARE 81 defrag(CkReductionMsg* impl_msg) 27 8
ENTRY CHARE 82 ArrayElement(CkMigrateMessage* impl_msg) 27 0
ENTRY CHARE 83 BaseLB(const CkLBOptions &impl_noname_0) 28 11
ENTRY CHARE 84 unregister(void) 28 0
ENTRY CHARE 85 BaseLB(CkMigrateMessage* impl_msg) 28 0
ENTRY CHARE 86 NullLB(const CkLBOptions &impl_noname_0) 29 11
ENTRY CHARE 87 migrationsDone(void) 29 0
ENTRY CHARE 88 NullLB(CkMigrateMessage* impl_msg) 29 0
ENTRY CHARE 89 LBDBInit(CkArgMsg* impl_msg) 30 0
ENTRY CHARE 90 LBDatabase(void) 31 0
ENTRY CHARE 91 LBDatabase(CkMigrateMessage* impl_msg) 31 0
ENTRY CHARE 92 MetaLBInit(CkArgMsg* impl_msg) 32 0
ENTRY CHARE 93 MetaBalancer(void) 33 0
ENTRY CHARE 94 ReceiveMinStats(CkReductionMsg* impl_msg) 33 8
ENTRY CHARE 95 LoadBalanceDecision(int req_no, int period) 33 11
ENTRY CHARE 96 LoadBalanceDecisionFinal(int req_no, int period) 33 11
ENTRY CHARE 97 ReceiveIterationNo(int impl_noname_0) 33 11
ENTRY CHARE 98 RegisterNoObjCallback(int impl_noname_1) 33 11
ENTRY CHARE 99 TriggerAdaptiveReduction(void) 33 0
ENTRY CHARE 100 MetaLBCallLBOnChares(void) 33 0
ENTRY CHARE 101 MetaBalancer(CkMigrateMessage* impl_msg) 33 0
ENTRY CHARE 102 MetaBalancerRedn(void) 34 0
ENTRY CHARE 103 ReceiveIterNo(int max_iter) 34 11
ENTRY CHARE 104 redn_wrapper_ReceiveIterNo(CkReductionMsg *impl_msg) 34 11
ENTRY CHARE 105 getMaxIter(int impl_noname_2) 34 11
ENTRY CHARE 106 MetaBalancerRedn(CkMigrateMessage* impl_msg) 34 0
ENTRY CHARE 107 ckcallback_main(CkArgMsg* impl_msg) 35 0
ENTRY CHARE 108 ckcallback_group(void) 36 0
ENTRY CHARE 109 registerCcsCallback(const char *name, const CkCallback &cb) 36 11
ENTRY CHARE 110 call(const CkCallback &c, const CkMarshalledMessage &msg) 36 11
ENTRY CHARE 111 ckcallback_group(CkMigrateMessage* impl_msg) 36 0
ENTRY CHARE 112 TempoChare(void) 37 0
ENTRY CHARE 113 tempoGeneric(TempoMessage* impl_msg) 37 20
ENTRY CHARE 114 TempoGroup(void) 38 0
ENTRY CHARE 115 tempoGeneric(TempoMessage* impl_msg) 38 20
ENTRY CHARE 116 TempoGroup(CkMigrateMessage* impl_msg) 38 0
ENTRY CHARE 117 TempoArray(void) 39 0
ENTRY CHARE 118 tempoGeneric(TempoMessage* impl_msg) 39 20
ENTRY CHARE 119 TempoArray(CkMigrateMessage* impl_msg) 39 0
ENTRY CHARE 120 waitqd_QDChare(CkArgMsg* impl_msg) 40 0
ENTRY CHARE 121 waitQD(void) 40 0
ENTRY CHARE 122 onQD(CkQdMsg* impl_msg) 40 5
ENTRY CHARE 123 waitqd_QDChare(CkMigrateMessage* impl_msg) 40 0
ENTRY CHARE 124 CkCheckpointMgr(void) 41 0
ENTRY CHARE 125 Checkpoint(const char *dirname, const CkCallback &cb) 41 11
ENTRY CHARE 126 SendRestartCB(CkReductionMsg* impl_msg) 41 8
ENTRY CHARE 127 CkCheckpointMgr(CkMigrateMessage* impl_msg) 41 0
ENTRY CHARE 128 CkCheckpointInit(CkArgMsg* impl_msg) 42 0
ENTRY CHARE 129 mpi_main(CkArgMsg* impl_msg) 43 0
ENTRY CHARE 130 exit(void) 43 0
ENTRY CHARE 131 TraceProjectionsInit(CkArgMsg* impl_msg) 44 0
ENTRY CHARE 132 KMeansBOC(const bool &impl_noname_0, int impl_noname_1, int impl_noname_2, double impl_noname_3, const bool &impl_noname_4) 45 11
ENTRY CHARE 133 startKMeansAnalysis(void) 45 0
ENTRY CHARE 134 flushCheck(CkReductionMsg* impl_msg) 45 8
ENTRY CHARE 135 flushCheckDone(void) 45 0
ENTRY CHARE 136 getNextPhaseMetrics(void) 45 0
ENTRY CHARE 137 globalMetricRefinement(CkReductionMsg* impl_msg) 45 8
ENTRY CHARE 138 findInitialClusters(KMeansStatsMessage* impl_msg) 45 21
ENTRY CHARE 139 updateKSeeds(CkReductionMsg* impl_msg) 45 8
ENTRY CHARE 140 updateSeedMembership(KSeedsMessage* impl_msg) 45 22
ENTRY CHARE 141 collectDistances(KSelectionMessage* impl_msg) 45 23
ENTRY CHARE 142 findNextMinMax(CkReductionMsg* impl_msg) 45 8
ENTRY CHARE 143 phaseDone(void) 45 0
ENTRY CHARE 144 KMeansBOC(CkMigrateMessage* impl_msg) 45 0
ENTRY CHARE 145 TraceProjectionsBOC(const bool &impl_noname_5, const bool &impl_noname_6) 46 11
ENTRY CHARE 146 traceProjectionsParallelShutdown(int impl_noname_7) 46 11
ENTRY CHARE 147 startTimeAnalysis(void) 46 0
ENTRY CHARE 148 startTimeDone(CkReductionMsg* impl_msg) 46 8
ENTRY CHARE 149 startEndTimeAnalysis(void) 46 0
ENTRY CHARE 150 endTimeDone(CkReductionMsg* impl_msg) 46 8
ENTRY CHARE 151 kMeansDone(void) 46 0
ENTRY CHARE 152 kMeansDone(CkReductionMsg* impl_msg) 46 8
ENTRY CHARE 153 finalize(void) 46 0
ENTRY CHARE 154 closingTraces(void) 46 0
ENTRY CHARE 155 closeParallelShutdown(CkReductionMsg* impl_msg) 46 8
ENTRY CHARE 156 flush_warning(int pe) 46 11
ENTRY CHARE 157 TraceProjectionsBOC(CkMigrateMessage* impl_msg) 46 0
ENTRY CHARE 158 Main(int _num_buckets) 47 11
ENTRY CHARE 159 Exit(void) 47 0
ENTRY CHARE 160 DataReady(void) 47 0
ENTRY CHARE 161 init_isum(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 162 final_isum(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 163 init_dsum(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 164 final_dsum(CkReductionMsg* impl_msg) 47 8
ENTRY CHARE 165 Sorter(void) 48 0
ENTRY CHARE 166 Sorter(const CkArrayID &bucketArr, int num_chares, const key &min, const key &max) 48 11
ENTRY CHARE 167 Sorter(const CkArrayID &bucketArr, int num_chares, const key &min, const key &max, const tuning_params &par) 48 11
ENTRY CHARE 168 Begin(void) 48 0
ENTRY CHARE 169 Begin(const tuning_params &par) 48 11
ENTRY CHARE 170 Histogram(CkReductionMsg* impl_msg) 48 8
ENTRY CHARE 171 Done(CkReductionMsg* impl_msg) 48 8
ENTRY CHARE 172 SanityCheck(CkReductionMsg* impl_msg) 48 8
ENTRY CHARE 173 Bucket(const CProxy_Main<key,value > &main_proxy, const key &min, const key &max) 49 11
ENTRY CHARE 174 StepSort(void) 49 0
ENTRY CHARE 175 CleanSplitters(void) 49 0
ENTRY CHARE 176 SetCallback(const CkCallback &cb) 49 11
ENTRY CHARE 177 SetData(void) 49 0
ENTRY CHARE 178 SetData(data_msg<key,value >* impl_msg) 49 0
ENTRY CHARE 179 CountFirstProbe(first_probe<key,value >* impl_msg) 49 0
ENTRY CHARE 180 CountProbe(next_probe<key >* impl_msg) 49 0
ENTRY CHARE 181 SendPortion(int k, int npd) 49 11
ENTRY CHARE 182 SendAll(next_probe<key >* impl_msg) 49 0
ENTRY CHARE 183 Load(data_msg<key,value >* impl_msg) 49 0
ENTRY CHARE 184 Load(void) 49 0
ENTRY CHARE 185 Bucket(CkMigrateMessage* impl_msg) 49 0
MESSAGE 0 0
MESSAGE 1 0
MESSAGE 2 0
MESSAGE 3 0
MESSAGE 4 4
MESSAGE 5 1
MESSAGE 6 4
MESSAGE 7 16
MESSAGE 8 272
MESSAGE 9 4
MESSAGE 10 8
MESSAGE 11 8
MESSAGE 12 40
MESSAGE 13 296
MESSAGE 14 4
MESSAGE 15 40
MESSAGE 16 32
MESSAGE 17 16
MESSAGE 18 24
MESSAGE 19 24
MESSAGE 20 24
MESSAGE 21 40
MESSAGE 22 16
MESSAGE 23 24
MESSAGE 24 88
MESSAGE 25 32
MESSAGE 26 16
TOTAL_FUNCTIONS 0 
END
